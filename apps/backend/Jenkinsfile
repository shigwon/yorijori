pipeline {
    agent none

    environment {
        GITLAB_URL = "https://lab.ssafy.com/s13-webmobile3-sub1/S13P11C102.git"
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-credentials')
        DOCKER_IMAGE = "parkheejun/linky-backend"

        VERSION = "1.0.0"
        DATE_TAG = "${new Date().format('yyyyMMdd_HHmmss')}"
        IMAGE_TAG = "${VERSION}-${DATE_TAG}"
        GIT_CREDENTIALS = 'gitlab-credentials'
    }

    stages {
        stage('Debug Environment') {
                    steps {
                        sh 'echo "Current container/environment:"'
                        sh 'hostname'
                        sh 'whoami'
                        sh 'pwd'
                        sh 'echo "JAVA_HOME: $JAVA_HOME"'
                        sh 'echo "Available Java installations:"'
                        sh 'ls -la /usr/lib/jvm/ || echo "No /usr/lib/jvm directory"'
                        sh 'ls -la /opt/java/ || echo "No /opt/java directory"'
                        sh 'which java'
                        sh 'java -version'
                    }
                }

        stage('릴리즈파일 체크아웃') {
            agent any
            steps {
                git branch: 'feature/deploy',
                    credentialsId: "${GIT_CREDENTIALS}",
                    url: "${GITLAB_URL}"

                stash includes: '**/*', name: 'source-code'
            }
        }

        stage('소스 빌드') {
            agent {
                docker {
                    image 'gradle:8-jdk17'
                }
            }
            steps {
                unstash 'source-code'
                dir('apps/backend') {
                    sh "chmod +x ./gradlew"
                    sh "./gradlew clean build --no-daemon"
                }
                stash includes: 'apps/backend/build/**/*', name: 'build-artifacts'
            }
        }

        stage('Docker 이미지 빌드 및 배포') {
            agent {
                docker {
                    image 'docker:28.3.3'
                    args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
                }
            }
            steps {
                unstash 'source-code'
                unstash 'build-artifacts'

                dir('apps/backend') {
                    sh "docker build -t ${DOCKER_IMAGE}:${IMAGE_TAG} ."
                }
                sh "docker tag ${DOCKER_IMAGE}:${IMAGE_TAG} ${DOCKER_IMAGE}:latest"

                sh "echo \$DOCKERHUB_CREDENTIALS_PSW | docker login -u \$DOCKERHUB_CREDENTIALS_USR --password-stdin"
                sh "docker push ${DOCKER_IMAGE}:${IMAGE_TAG}"
                sh "docker push ${DOCKER_IMAGE}:latest"
            }
        }

        stage('배포 매니페스트 업데이트') {
            agent any
            steps {
                git branch: 'feature/deploy',
                    credentialsId: "${GIT_CREDENTIALS}",
                    url: "${GITLAB_URL}"

                sh """
                sed -i 's|image: ${DOCKER_IMAGE}:.*|image: ${DOCKER_IMAGE}:${IMAGE_TAG}|' apps/backend/k8s/app/deployment.yaml
                """

                sh """
                git config user.email "qmzo553@gmail.com"
                git config user.name "박희준"
                git add apps/backend/k8s/app/deployment.yaml
                git commit -m "Update backend image to ${DOCKER_IMAGE}:${IMAGE_TAG}"
                git push origin feature/deploy
                """
            }
        }
    }
}
