pipeline {
    agent none

    environment {
        GIT_URL = "https://lab.ssafy.com/s13-webmobile3-sub1/S13P11C102.git"
        GIT_BRANCH = "test/jenkins-rider"
        GIT_CREDENTIALS_ID = "Gitlab"
        DOCKER_IMAGE = "baejunyeong/linky-frontend-rider"
        DOCKER_CONTAINER = "frontend-rider"
        IMAGE_TAG = "1.0.0"
    }

    stages {
        stage('Checkout branch') {
            agent any
            steps {
                git 
                    credentialsId: "${GIT_CREDENTIALS_ID}",
                    url: "${GIT_URL}"

                sh 'echo "Checked out branch ${GIT_BRANCH} from ${GIT_URL}"'
                stash includes: '**/*', name: 'frontend-source-code'
            }
        }

        stage('Install Dependencies & build') {
            agent {
                docker {
                    image 'node:lts-alpine'
                    args '-u root'
                    reuseNode true
                }
            }
            steps {
                unstash 'frontend-source-code'

                script {
                    dir('apps/frontend/rider') {
                        sh 'echo "Current directory: ${pwd()}"'
                        sh 'echo "Installing dependencies and building the application..."'
                        sh 'npm install'
                        sh 'echo "Building the application..."'
                        sh 'npm run build'
                    }
                }

                stash includes: 'apps/frontend/rider/dist/**/*', name: 'frontend-rider-build'
            }
        }

        stage('Docker Build') {
            agent {
                docker {
                    image 'docker:28.3.3'
                    args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
                }
            }
            steps {
                unstash 'frontend-source-code'
                unstash 'frontend-rider-build'

                script {
                    dir('apps/frontend/rider') {
                        sh 'echo "Current directory: ${pwd()}"'
                        sh 'echo "Building Docker image..."'
                        sh 'docker.build("${DOCKER_IMAGE}:${IMAGE_TAG}")'
                        sh 'echo "Docker image built: ${image.imageName()}"'
                    }
                    sh 'echo "Docker image built successfully."'
                    sh 'docker tag ${DOCKER_IMAGE}:${IMAGE_TAG} ${DOCKER_IMAGE}:latest'
                }
            }
        }

        stage('Docker Deploy') {
            agent {
                docker {
                    image 'docker:28.3.3'
                    args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
                }   
            }
            steps {
                sh 'echo "Deploying application..."'
                sh 'docker stop ${DOCKER_CONTAINER} || true'
                sh 'docker rm ${DOCKER_CONTAINER} || true'
                sh 'docker run -d --name ${DOCKER_CONTAINER} -p 7080:7080 ${DOCKER_IMAGE}:${IMAGE_TAG}'
                sh 'echo "Application deployed successfully."'
            }
        }
    }
}